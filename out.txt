['022_Airbnbs', '062_Trump', '053_Patents', '005_NYC', '020_Real', '034_World', '009_Central', '049_Boris', '007_Fifa', '058_US', '033_Employee', '056_Emoji', '003_Love', '050_ING', '014_Airbnb', '032_Delicatessen', '059_Second', '026_Predicting', '004_Taxi', '017_Hacker', '052_Professional', '002_Titanic', '029_NYTimes', '041_Airline', '018_Staff', '016_Holiday', '061_Disneyland', '040_Speed', '008_Tornados', '028_Predict', '054_Joe', '051_Pokemon', '027_Supermarket', '063_Influencers', '046_120', '065_RFM', '031_Trustpilot', '038_Stroke', '037_Ted', '011_SF', '012_Heart', '036_US', '015_Food', '023_Climate', '055_German', '006_London', '010_ECommerce', '044_IMDb', '060_Bakery', '039_Happy', '047_Bank', '045_Predict', '030_Professionals', '057_Spain', '025_Data', '042_Predict', '013_Roller', '064_Clustering', '019_Aircraft', '021_Telco', '024_Salary', '035_Billboard', '001_Forbes', '043_Predict', '048_Data']
====================
022_Airbnbs
====================
Index(['listing_id', 'name', 'host_id', 'host_since', 'host_location',
       'host_response_time', 'host_response_rate', 'host_acceptance_rate',
       'host_is_superhost', 'host_total_listings_count',
       'host_has_profile_pic', 'host_identity_verified', 'neighbourhood',
       'district', 'city', 'latitude', 'longitude', 'property_type',
       'room_type', 'accommodates', 'bedrooms', 'amenities', 'price',
       'minimum_nights', 'maximum_nights', 'review_scores_rating',
       'review_scores_accuracy', 'review_scores_cleanliness',
       'review_scores_checkin', 'review_scores_communication',
       'review_scores_location', 'review_scores_value', 'instant_bookable'],
      dtype='object')
====================
====================
062_Trump
====================
Index(['id', 'author_id', 'author_name', 'author_handler', 'author_avatar',
       'lang', 'text', 'date', 'mention_ids', 'mention_names', 'retweets',
       'favorites', 'links', 'links_first', 'image_links', 'image_links_first',
       'tweet_link', 'rp_user_id', 'rp_user_name', 'location'],
      dtype='object')
====================
====================
053_Patents
====================
Index(['num_claims', 'organization', 'kind', 'type', 'graphext_cluster',
       'date', 'abstract', 'title', 'lang', 'abstract_gx_ADJ', 'grp_title',
       'abstract_gx_products', 'abstract_gx_organizations', 'abstract_gx_NOUN',
       'abstract_gx_ngrams', 'id', 'target', 'weight', 'x', 'y'],
      dtype='object')
====================
====================
005_NYC
====================
Index(['segmentation_1', 'descriptor', 'complaint_type', 'created_date',
       'borough', 'hour', 'month_name', 'weekday_name', 'agency',
       'resolution_description', 'agency_name', 'city', 'location_type',
       'incident_zip', 'incident_address', 'street_name', 'cross_street_1',
       'cross_street_2', 'intersection_street_1', 'intersection_street_2',
       'address_type', 'landmark', 'facility_type', 'status', 'due_date',
       'resolution_action_updated_date', 'community_board', 'x_coordinate',
       'y_coordinate', 'park_facility_name', 'park_borough', 'bbl',
       'open_data_channel_type', 'vehicle_type', 'taxi_company_borough',
       'taxi_pickup_location', 'bridge_highway_name',
       'bridge_highway_direction', 'road_ramp', 'bridge_highway_segment',
       'latitude', 'longitude', 'location', 'unique_key', 'Unnamed_0',
       'closed_date'],
      dtype='object')
====================
====================
020_Real
====================
Index(['Id', 'Referencia', 'Precio', 'Tipo', 'Anunciante', 'Actualización',
       'Duración', 'Superficie', 'Superficie útil', 'Superficie solar',
       'Habitaciones', 'Baños', 'Planta', 'Antigüedad', 'Clasificación',
       'Calle', 'Barrio', 'Distrito', 'Localidad', 'Código postal', 'Latitud',
       'Longitud', 'Nuevo', 'Reformado', 'Conservado', 'Exterior',
       'Orientación sur', 'Soleado', 'Amueblado', 'Negociar muebles',
       'Cocina equipada', 'Cocina independiente', 'Armarios empotrados',
       'Garaje', 'Terraza', 'Ascensor', 'Aire acondicionado', 'Trastero',
       'Puerta blindada', 'Piscina', 'Jardín', 'Comedor', 'Balcón', 'Lavadero',
       'Chimenea', 'Portero automático', 'Sistema de seguridad',
       'Calefacción central', 'Calefacción eléctrica', 'Gas natural', 'Gasoil',
       'Aluminio', 'PVC', 'Climalit', 'Madera', 'Parquet', 'Gres', 'Tarima',
       'Mármol'],
      dtype='object')
====================
====================
034_World
====================
Index(['Country name', 'Regional indicator', 'Ladder score',
       'Standard error of ladder score', 'upperwhisker', 'lowerwhisker',
       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',
       'Freedom to make life choices', 'Generosity',
       'Perceptions of corruption', 'Ladder score in Dystopia',
       'Explained by: Log GDP per capita', 'Explained by: Social support',
       'Explained by: Healthy life expectancy',
       'Explained by: Freedom to make life choices',
       'Explained by: Generosity', 'Explained by: Perceptions of corruption',
       'Dystopia + residual'],
      dtype='object')
====================
====================
009_Central
====================
Index(['DATE', 'PRCP', 'SNOW', 'SNWD', 'TMIN', 'TMAX'], dtype='object')
====================
====================
049_Boris
====================
Index(['id<gx:category>', 'author_id<gx:category>', 'author_name<gx:category>',
       'author_handler<gx:category>', 'author_avatar<gx:url>',
       'user_created_at<gx:date>', 'user_description<gx:text>',
       'user_favourites_count<gx:number>', 'user_followers_count<gx:number>',
       'user_following_count<gx:number>', 'user_listed_count<gx:number>',
       'user_tweets_count<gx:number>', 'user_verified<gx:boolean>',
       'user_location<gx:text>', 'lang<gx:category>', 'type<gx:category>',
       'text<gx:text>', 'date<gx:date>', 'mention_ids<gx:list[category]>',
       'mention_names<gx:list[category]>', 'retweets<gx:number>',
       'favorites<gx:number>', 'replies<gx:number>', 'quotes<gx:number>',
       'links<gx:list[url]>', 'links_first<gx:url>',
       'image_links<gx:list[url]>', 'image_links_first<gx:url>',
       'rp_user_id<gx:category>', 'rp_user_name<gx:category>',
       'location<gx:text>', 'tweet_link<gx:url>', 'source<gx:text>',
       'search<gx:category>'],
      dtype='object')
====================
====================
007_Fifa
====================
Index(['ID<gx:number>', 'Name<gx:text>', 'Age<gx:number>', 'Photo<gx:url>',
       'Nationality<gx:category>', 'Overall<gx:number>',
       'Potential<gx:number>', 'Club<gx:category>', 'Value_€<gx:currency>',
       'Wage_€<gx:currency>', 'Preferred Foot<gx:category>',
       'International Reputation<gx:number>', 'Weak Foot<gx:number>',
       'Skill Moves<gx:number>', 'Work Rate<gx:category>',
       'Position<gx:category>', 'Joined<gx:date>',
       'Contract Valid Until<gx:date>', 'Height_ft<gx:number>',
       'Weight_lbs<gx:number>', 'Crossing<gx:number>', 'Finishing<gx:number>',
       'HeadingAccuracy<gx:number>', 'ShortPassing<gx:number>',
       'Volleys<gx:number>', 'Dribbling<gx:number>', 'Curve<gx:number>',
       'FKAccuracy<gx:number>', 'LongPassing<gx:number>',
       'BallControl<gx:number>', 'Acceleration<gx:number>',
       'SprintSpeed<gx:number>', 'Agility<gx:number>', 'Reactions<gx:number>',
       'Balance<gx:number>', 'ShotPower<gx:number>', 'Jumping<gx:number>',
       'Stamina<gx:number>', 'Strength<gx:number>', 'LongShots<gx:number>',
       'Aggression<gx:number>', 'Interceptions<gx:number>',
       'Positioning<gx:number>', 'Vision<gx:number>', 'Penalties<gx:number>',
       'Composure<gx:number>', 'Marking<gx:number>',
       'StandingTackle<gx:number>', 'SlidingTackle<gx:number>',
       'GKDiving<gx:number>', 'GKHandling<gx:number>', 'GKKicking<gx:number>',
       'GKPositioning<gx:number>', 'GKReflexes<gx:number>',
       'Best Position<gx:category>', 'Best Overall Rating<gx:number>',
       'DefensiveAwareness<gx:number>', 'General Postion<gx:category>',
       'Legend'],
      dtype='object')
====================
====================
058_US
====================
Index(['id', 'Weight', 'NCHS Urban/rural', 'Division', 'Wave', 'Start time',
       'County FIPS', 'How old are you?', 'Are you',
       'Would you say you follow what's going on in government and public affairs',
       'Are you registered to vote?',
       'Are you registered to vote? Not open to vote',
       'How likely are you to vote in the forthcoming US Presidential election? Early Voting Open',
       'Headline vote share (intention and already voted combined)',
       'Who did you vote for?',
       'Who are you most likely to vote for on election day?',
       'Did you vote in the 2016 Presidential election? (Four years ago)',
       'Who did you vote for in the 2016 Presidential election? (Four years ago)',
       'Which of the following best describes your ethnic heritage?',
       'What is the highest degree or level of school you have *completed* ?',
       'Which of the following best describes your current employment status?',
       'What was your yearly household income at the end of last year (before tax)?',
       'If you had to choose a candidate today, who would you vote for?',
       'Again, for statistical purposes only, what is your age?', 'State',
       'Region',
       'To what extent do you agree or disagree that the election will be fair, and you will trust the result?',
       'How confident are you in the security and effectiveness of mail-in ballots when voting for president?',
       'In the event of being declared the loser, should {answer:Candidate} accept or challenge the result?',
       'If you have any concerns about the US election, what are they? - Contracting Covid-19 at a polling station',
       'If you have any concerns about the US election, what are they? - Mail-in or in-person voter fraud',
       'If you have any concerns about the US election, what are they? - Polling place reduction and changes',
       'If you have any concerns about the US election, what are they? - Long wait times at polling place',
       'If you have any concerns about the US election, what are they? - Voter intimidation at polling place',
       'If you have any concerns about the US election, what are they? - Foreign interference/influence on the election',
       'If you have any concerns about the US election, what are they? - The losing candidate not accepting the result',
       'If you have any concerns about the US election, what are they? - Fake news/ disinformation',
       'If you have any concerns about the US election, what are they? - Other',
       'If you have any concerns about the US election, what are they? - I don’t have any specific concerns about the election',
       'Which of these best describes the kind of work you do?', 'likelihood',
       'NCHS Urban/rural (long form)', 'Local time', 'race_ethnicity_grouped',
       'education_grouped_by_gender', 'weight_by_2016_vote', 'vote_choice',
       'age_by_gender', 'region_x_gender', 'simple_2016_vote', 'likely_voter',
       'likely_decided_voter'],
      dtype='object')
====================
====================
033_Employee
====================
Index(['Left', 'Satisfaction Level', 'Work Accident', 'Average Monthly Hours',
       'Last Evaluation', 'Years in the Company', 'salary', 'Department',
       'Number of Projects', 'Promoted in the last 5 years?', 'Date Hired',
       'Marital_Status'],
      dtype='object')
====================
====================
056_Emoji
====================
Index(['name', 'emoji', 'Calories (kcal)', 'Carbohydrates (g)',
       'Total Sugar (g)', 'Protein (g)', 'Total Fat (g)', 'Saturated Fat (g)',
       'Monounsaturated Fat (g)', 'Polyunsaturated Fat (g)', 'Total Fiber (g)',
       'Cholesterol (mg)', 'Vitamin B6 (mg)', 'Vitamin A (IU)',
       'Vitamin B12 (ug)', 'Vitamin C (mg)', 'Vitamin D (IU)',
       'Vitamin E (IU)', 'Vitamin K (ug)', 'Thiamin (mg)', 'Riboflavin (mg)',
       'Niacin (mg)', 'Folate (ug)', 'Pantothenic Acid (mg)', 'Choline (mg)',
       'Calcium (g)', 'Copper (mg)', 'Iron (mg)', 'Magnesium (mg)',
       'Manganese (mg)', 'Phosphorus (g)', 'Potassium (g)', 'Selenium (ug)',
       'Sodium (g)', 'Zinc (mg)'],
      dtype='object')
====================
====================
003_Love
====================
Index(['Submitted at', 'What is your age? 👶🏻👵🏻', 'What's your nationality?',
       'What is your civil status? 💍', 'What's your sexual orientation?',
       'Do you have children? 🍼',
       'What is the maximum level of studies you have achieved? 🎓',
       'Gross annual salary (in euros) 💸', 'What's your height? in cm 📏',
       'What's your weight? in Kg ⚖️', 'What is your body complexity? 🏋️',
       'What is your eye color? 👁️', 'What is your hair color? 👩🦰👱🏽',
       'What is your skin tone?', 'How long is your hair? 💇🏻♀️💇🏽♂️',
       'How long is your facial hair? 🧔🏻', 'How often do you wear glasses? 👓',
       'How attractive do you consider yourself?',
       'Have you ever use an oline dating app?',
       'Where have you met your sexual partners? (In a Bar or Restaurant)',
       'Where have you met your sexual partners? (Through Friends)',
       'Where have you met your sexual partners? (Through Work or as Co-Workers)',
       'Where have you met your sexual partners? (Through Family)',
       'Where have you met your sexual partners? (in University)',
       'Where have you met your sexual partners? (in Primary or Secondary School)',
       'Where have you met your sexual partners? (Neighbors)',
       'Where have you met your sexual partners? (in Church)',
       'Where have you met your sexual partners? (Other)',
       'How many people have you kissed?',
       'How many sexual partners have you had?',
       'How many people have you considered as your boyfriend_girlfriend?',
       'How many times per month did you practice sex lately?',
       'Happiness scale', 'What area of knowledge is closer to you?',
       'If you are in a relationship, how long have you been with your partner?'],
      dtype='object')
====================
====================
050_ING
====================
Index(['id', 'author_id', 'author_name', 'author_handler', 'author_avatar',
       'lang', 'type', 'text', 'date', 'mention_ids', 'mention_names',
       'retweets', 'favorites', 'links', 'links_first', 'image_links',
       'image_links_first', 'rp_user_id', 'rp_user_name', 'location',
       'tweet_link', 'search'],
      dtype='object')
====================
====================
014_Airbnb
====================
Index(['id', 'listing_url', 'scrape_id', 'last_scraped', 'source', 'name',
       'description', 'neighborhood_overview', 'picture_url', 'host_id',
       'host_url', 'host_name', 'host_since', 'host_location', 'host_about',
       'host_response_time', 'host_response_rate', 'host_acceptance_rate',
       'host_is_superhost', 'host_thumbnail_url', 'host_picture_url',
       'host_neighbourhood', 'host_listings_count',
       'host_total_listings_count', 'host_verifications',
       'host_has_profile_pic', 'host_identity_verified', 'neighbourhood',
       'neighbourhood_cleansed', 'neighbourhood_group_cleansed', 'latitude',
       'longitude', 'property_type', 'room_type', 'accommodates', 'bathrooms',
       'bathrooms_text', 'bedrooms', 'beds', 'amenities', 'price',
       'minimum_nights', 'maximum_nights', 'minimum_minimum_nights',
       'maximum_minimum_nights', 'minimum_maximum_nights',
       'maximum_maximum_nights', 'minimum_nights_avg_ntm',
       'maximum_nights_avg_ntm', 'calendar_updated', 'has_availability',
       'availability_30', 'availability_60', 'availability_90',
       'availability_365', 'calendar_last_scraped', 'number_of_reviews',
       'number_of_reviews_ltm', 'number_of_reviews_l30d', 'first_review',
       'last_review', 'review_scores_rating', 'review_scores_accuracy',
       'review_scores_cleanliness', 'review_scores_checkin',
       'review_scores_communication', 'review_scores_location',
       'review_scores_value', 'license', 'instant_bookable',
       'calculated_host_listings_count',
       'calculated_host_listings_count_entire_homes',
       'calculated_host_listings_count_private_rooms',
       'calculated_host_listings_count_shared_rooms', 'reviews_per_month'],
      dtype='object')
====================
====================
032_Delicatessen
====================
Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',
       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',
       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',
       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',
       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',
       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',
       'AcceptedCmp2', 'Complain', 'Z_CostContact', 'Z_Revenue', 'Response'],
      dtype='object')
====================
====================
059_Second
====================
Index(['url', 'company', 'make', 'model', 'version', 'price', 'price_financed',
       'fuel', 'year', 'kms', 'power', 'doors', 'shift', 'color', 'photos',
       'is_professional', 'dealer', 'province', 'country', 'publish_date',
       'insert_date'],
      dtype='object')
====================
====================
026_Predicting
====================
Index(['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol', 'quality'],
      dtype='object')
====================
====================
004_Taxi
====================
Index(['VendorID', 'tpep_pickup_datetime', 'tpep_dropoff_datetime',
       'passenger_count', 'trip_distance', 'RatecodeID', 'store_and_fwd_flag',
       'PULocationID', 'DOLocationID', 'payment_type', 'fare_amount', 'extra',
       'mta_tax', 'tip_amount', 'tolls_amount', 'improvement_surcharge',
       'total_amount', 'congestion_surcharge', 'Airport_fee', 'airport_fee'],
      dtype='object')
====================
====================
017_Hacker
====================
Index(['clusters_3', 'test', 'gx_cluster', 'Clusters II', 'timestamp',
       'title_gx_ngrams', 'title', 'hour', 'weekday_name', 'month_name',
       'title_gx_cardiff_nlp_sentiment', 'title_gx_hashtags', 'url', 'by',
       'score', 'descendants', 'partofday', 'season', 'title_gx_lang',
       'title_gx_text_length'],
      dtype='object')
====================
====================
052_Professional
====================
Index(['Profession', 'Openness', 'Conscientousness', 'Extraversion',
       'Agreeableness', 'Emotional_Range', 'Conversation',
       'Openness to Change', 'Hedonism', 'Self-enhancement',
       'Self-transcendence', 'n'],
      dtype='object')
====================
====================
002_Titanic
====================
Index(['Survived', 'Pclass', 'Name', 'Sex', 'Age', 'Siblings_Spouses Aboard',
       'Parents_Children Aboard', 'Fare'],
      dtype='object')
====================
====================
029_NYTimes
====================
Index(['headline', 'date', 'material_type', 'web_url', 'keywords'], dtype='object')
====================
====================
041_Airline
====================
Index(['tweet_id', 'airline_sentiment', 'airline_sentiment_confidence',
       'negativereason', 'negativereason_confidence', 'airline',
       'airline_sentiment_gold', 'name', 'negativereason_gold',
       'retweet_count', 'text', 'tweet_coord', 'tweet_created',
       'tweet_location', 'user_timezone'],
      dtype='object')
====================
====================
018_Staff
====================
Index(['Left', 'Satisfaction Level', 'Work Accident', 'Average Monthly Hours',
       'Last Evaluation', 'Years in the Company', 'salary', 'Department',
       'Number of Projects', 'Promoted in the last 5 years?', 'Date Hired'],
      dtype='object')
====================
====================
016_Holiday
====================
Index(['CustomerID', 'ProdTaken', 'Age', 'TypeofContact', 'CityTier',
       'DurationOfPitch', 'Occupation', 'Gender', 'NumberOfPersonVisiting',
       'NumberOfFollowups', 'ProductPitched', 'PreferredPropertyStar',
       'MaritalStatus', 'NumberOfTrips', 'Passport', 'PitchSatisfactionScore',
       'OwnCar', 'NumberOfChildrenVisiting', 'Designation', 'MonthlyIncome'],
      dtype='object')
====================
====================
061_Disneyland
====================
Index(['Review_ID', 'Rating', 'Year_Month', 'Reviewer_Location', 'Review_Text',
       'Branch'],
      dtype='object')
====================
====================
040_Speed
====================
Index(['has_null', 'wave', 'gender', 'age', 'age_o', 'd_age', 'd_d_age',
       'race', 'race_o', 'samerace',
       ...
       'd_expected_num_interested_in_me', 'd_expected_num_matches', 'like',
       'guess_prob_liked', 'd_like', 'd_guess_prob_liked', 'met', 'decision',
       'decision_o', 'match'],
      dtype='object', length=123)
====================
====================
008_Tornados
====================
Index(['yr', 'mo', 'dy', 'date', 'st', 'mag', 'inj', 'fat', 'slat', 'slon',
       'elat', 'elon', 'len', 'wid'],
      dtype='object')
====================
====================
028_Predict
====================
Index(['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',
       'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome'],
      dtype='object')
====================
====================
054_Joe
====================
Index(['id<gx:category>', 'author_id<gx:category>', 'author_name<gx:category>',
       'author_handler<gx:category>', 'author_avatar<gx:url>',
       'user_created_at<gx:date>', 'user_description<gx:text>',
       'user_favourites_count<gx:number>', 'user_followers_count<gx:number>',
       'user_following_count<gx:number>', 'user_listed_count<gx:number>',
       'user_tweets_count<gx:number>', 'user_verified<gx:boolean>',
       'user_location<gx:text>', 'lang<gx:category>', 'type<gx:category>',
       'text<gx:text>', 'date<gx:date>', 'mention_ids<gx:list[category]>',
       'mention_names<gx:list[category]>', 'retweets<gx:number>',
       'favorites<gx:number>', 'replies<gx:number>', 'quotes<gx:number>',
       'links<gx:list[url]>', 'links_first<gx:url>',
       'image_links<gx:list[url]>', 'image_links_first<gx:url>',
       'rp_user_id<gx:category>', 'rp_user_name<gx:category>',
       'location<gx:text>', 'tweet_link<gx:url>', 'source<gx:text>',
       'search<gx:category>'],
      dtype='object')
====================
====================
051_Pokemon
====================
Index(['number', 'name', 'type1', 'type2', 'total', 'hp', 'attack', 'defense',
       'sp_attack', 'sp_defense', 'speed', 'generation', 'legendary'],
      dtype='object')
====================
====================
027_Supermarket
====================
Index(['Invoice ID', 'Branch', 'City', 'Customer type', 'Gender',
       'Product line', 'Unit price', 'Quantity', 'Tax 5%', 'Total', 'Date',
       'Time', 'Payment', 'cogs', 'gross margin percentage', 'gross income',
       'Rating'],
      dtype='object')
====================
====================
063_Influencers
====================
Index(['id', 'name', 'pic', 'is_organization', 'community', 'page_rank_norm',
       'weight', 'x', 'y', 'twitter_profile_id', 'gx_link_target',
       'gx_link_weight', 'gx_link_reciprocal', 'gx_link_should'],
      dtype='object')
====================
====================
046_120
====================
Index(['ID', 'Name', 'Sex', 'Age', 'Height', 'Weight', 'Team', 'NOC', 'Games',
       'Year', 'Season', 'City', 'Sport', 'Event', 'Medal'],
      dtype='object')
====================
====================
065_RFM
====================
Index(['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate',
       'UnitPrice', 'CustomerID', 'Country'],
      dtype='object')
====================
====================
031_Trustpilot
====================
Index(['published_date', 'country_code', 'title', 'body', 'rating', 'Company'], dtype='object')
====================
====================
038_Stroke
====================
Index(['id', 'gender', 'age', 'hypertension', 'heart_disease', 'ever_married',
       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',
       'smoking_status', 'stroke'],
      dtype='object')
====================
====================
037_Ted
====================
Index(['talk_id', 'title', 'speaker_1', 'all_speakers', 'occupations',
       'about_speakers', 'views', 'recorded_date', 'published_date', 'event',
       'native_lang', 'available_lang', 'comments', 'duration', 'topics',
       'related_talks', 'url', 'description', 'transcript'],
      dtype='object')
====================
====================
011_SF
====================
Index(['Incident Datetime', 'Incident Date', 'Incident Time', 'Incident Year',
       'Incident Day of Week', 'Report Datetime', 'Row ID', 'Incident ID',
       'Incident Number', 'CAD Number', 'Report Type Code',
       'Report Type Description', 'Filed Online', 'Incident Code',
       'Incident Category', 'Incident Subcategory', 'Incident Description',
       'Resolution', 'Intersection', 'CNN', 'Police District',
       'Analysis Neighborhood', 'Supervisor District',
       'Supervisor District 2012', 'Latitude', 'Longitude', 'Point',
       'Neighborhoods', 'ESNCAG - Boundary File',
       'Central Market/Tenderloin Boundary Polygon - Updated',
       'Civic Center Harm Reduction Project Boundary',
       'HSOC Zones as of 2018-06-05', 'Invest In Neighborhoods (IIN) Areas',
       'Current Supervisor Districts', 'Current Police Districts'],
      dtype='object')
====================
====================
012_Heart
====================
Index(['Age', 'Sex', 'ChestPainType', 'RestingBP', 'Cholesterol', 'FastingBS',
       'RestingECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'ST_Slope',
       'HeartDisease'],
      dtype='object')
====================
====================
036_US
====================
Index(['dest', 'origin', 'count', 'name_dest', 'name_origin', 'lat_dest',
       'lon_dest', 'lat_origin', 'lon_origin'],
      dtype='object')
====================
====================
015_Food
====================
Index(['FOOD NAME', 'SCIENTIFIC NAME', 'GROUP', 'SUB GROUP'], dtype='object')
====================
====================
023_Climate
====================
Index(['fecha', 'season', 'month_name', 'tmin', 'tmax', 'sol', 'presMax',
       'presMin', 'prec', 'velmedia', 'racha', 'dir', 'tmed', 'horatmax',
       'horatmin', 'horaPresMax', 'horaPresMin', 'horaracha', 'weekday_name',
       'dayofyear', 'quarter', 'year', 'altitud', 'nombre', 'provincia',
       'indicativo'],
      dtype='object')
====================
====================
055_German
====================
Index(['Loan Duration - Months', 'Credit History', 'Purpose of Loan',
       'Loan Amount', 'Savings Account', 'Length of Current Employment',
       'Installment Rate as % of Income', 'Guarantors',
       'Length of Current Property Residence', 'Age', 'Housing',
       'Number of Existing Loans', 'Job', 'Number of Dependants',
       'Foreign Worker', 'Risk', 'Sex', 'Status'],
      dtype='object')
====================
====================
006_London
====================
Index(['neighbourhood_cleansed', 'host_neighbourhood', 'price', 'room_type',
       'reviews_per_month', 'property_type', 'bedrooms', 'host_verifications',
       'host_acceptance_rate', 'host_identity_verified', 'beds', 'amenities',
       'minimum_nights', 'last_review', 'review_scores_rating',
       'instant_bookable', 'calculated_host_listings_count', 'first_review',
       'number_of_reviews', 'accommodates', 'listing_url', 'last_scraped',
       'source', 'name', 'description', 'neighborhood_overview', 'picture_url',
       'host_id', 'host_name', 'host_since', 'host_location', 'host_about',
       'host_response_time', 'host_response_rate', 'host_is_superhost',
       'host_thumbnail_url', 'host_picture_url', 'host_listings_count',
       'host_total_listings_count', 'host_has_profile_pic', 'neighbourhood',
       'latitude', 'longitude', 'bathrooms', 'bathrooms_text',
       'maximum_nights', 'minimum_minimum_nights', 'maximum_minimum_nights',
       'minimum_maximum_nights', 'maximum_maximum_nights',
       'minimum_nights_avg_ntm', 'maximum_nights_avg_ntm', 'calendar_updated',
       'has_availability', 'availability_30', 'availability_60',
       'availability_90', 'availability_365', 'calendar_last_scraped',
       'number_of_reviews_ltm', 'number_of_reviews_l30d',
       'review_scores_accuracy', 'review_scores_cleanliness',
       'review_scores_checkin', 'review_scores_communication',
       'review_scores_location', 'review_scores_value', 'license',
       'calculated_host_listings_count_entire_homes',
       'calculated_host_listings_count_private_rooms',
       'calculated_host_listings_count_shared_rooms', 'x', 'y', 'price_M0jI'],
      dtype='object')
====================
====================
010_ECommerce
====================
Index(['Clothing ID', 'Age', 'Title', 'Review Text', 'Rating',
       'Recommended IND', 'Positive Feedback Count', 'Division Name',
       'Department Name', 'Class Name'],
      dtype='object')
====================
====================
044_IMDb
====================
Index(['imdb_title_id', 'title', 'original_title', 'year', 'date_published',
       'genre', 'duration', 'country', 'language', 'director', 'writer',
       'production_company', 'actors', 'description', 'avg_vote', 'votes',
       'budget', 'usa_gross_income', 'worlwide_gross_income', 'metascore',
       'reviews_from_users', 'reviews_from_critics'],
      dtype='object')
====================
====================
060_Bakery
====================
Index(['Transaction', 'Item', 'date_time', 'period_day', 'weekday_weekend'], dtype='object')
====================
====================
039_Happy
====================
Index(['wid', 'reflection_period', 'cleaned_hm', 'num_sentence',
       'ground_truth_category', 'predicted_category', 'age', 'country',
       'gender', 'marital', 'parenthood'],
      dtype='object')
====================
====================
047_Bank
====================
Index(['id', 'attrition_flag', 'customer_age', 'gender', 'education_level',
       'income_category', 'total_relationship_count', 'months_inactive_12_mon',
       'credit_limit', 'total_revolving_bal', 'total_amt_chng_q4_q1',
       'total_trans_amt', 'total_trans_ct', 'total_ct_chng_q4_q1',
       'avg_utilization_ratio'],
      dtype='object')
====================
====================
045_Predict
====================
Index(['id', 'name', 'popularity', 'duration_ms', 'artists', 'id_artists',
       'danceability', 'energy', 'key', 'loudness', 'speechiness',
       'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo',
       'release_year', 'release_month', 'release_day'],
      dtype='object')
====================
====================
030_Professionals
====================
Index(['Geographies', 'Labeled Clusters', 'General Segments',
       'Select the title most similar to your current role (or most recent title if retired)',
       'In which country do you currently reside?',
       '(Average) For how many years have you used machine learning methods?',
       '(Average) What is your current yearly compensation (approximate $USD)?_rx_K',
       '(Average) What is the size of the company where you are employed?',
       '(Average) For how many years have you been writing code and_or programming?',
       'Which of the following natural language processing (NLP) methods do you use on a regular basis?',
       'Which of the following integrated development environments (IDE's) do you use on a regular basis?',
       'What is your current yearly compensation (approximate $USD)?',
       'Which of the following cloud computing platforms do you use on a regular basis?',
       'Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?',
       'Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you use on a regular basis?',
       'Which of the following ML algorithms do you use on a regular basis?,Which of the following ML algorithms do you use on a regular basis?',
       'For how many years have you been writing code and_or programming?',
       'What is the size of the company where you are employed?',
       '(Average) Approximately how much money have you (or your team) spent on machine',
       '(Average) What is your current yearly compensation (approximate $USD)?',
       'Which types of specialized hardware do you use on a regular basis?',
       '(Average) Approximately how many individuals are responsible for data science wo',
       'Which of the following business intelligence tools do you use on a regular basis?',
       'Do you use any automated machine learning tools (or partial AutoML tools) on a regular basis?',
       '(Average) Approximately how many times have you used a TPU (tensor processing unit)?',
       'Do you use any of the following data storage products on a regular basis?',
       'Approximately how many individuals are responsible for data science workloads at your place of business?',
       'Of the cloud platforms that you are familiar with, which has the best developer experience (most enjoyable to use)?',
       'On which platforms have you begun or completed data science courses?',
       'Which categories of automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?',
       'Do you use any of the following managed machine learning products on a regular basis?',
       'Who_what are your favorite media sources that report on data science topics?',
       'In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?',
       'Do you use any tools to help manage machine learning experiments?',
       'Where do you publicly share your data analysis or machine learning applications?',
       'Do you use any of the following cloud computing products on a regular basis?',
       'In the next 2 years, do you hope to become more familiar with any of these tools for managing ML experiments?',
       'What is your gender?',
       'Which specific automated machine learning tools (or partial AutoML tools) do you hope to become more familiar with in the next 2 years?',
       'Which categories of computer vision methods do you use on a regular basis?',
       'For how many years have you used machine learning methods?',
       'Which of the following machine learning frameworks do you use on a regular basis?,Which of the following machine learning frameworks do you use on a regular basis?',
       '(Average) What is your age (years)?',
       'Which of the following big data products (relational database, data warehouse, data lake, or similar) do you use most often?',
       'Which of the following business intelligence tools do you use most often?',
       'What is the primary tool that you use at work or school to analyze data?',
       'Does your current employer incorporate machine learning methods into their business?',
       'Approximately how many times have you used a TPU (tensor processing unit)?',
       'Which of the following hosted notebook products do you use on a regular basis?',
       'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?',
       'In what industry is your current employer_contract (or your most recent employer if retired)?',
       'Which of the following big data products (relational databases, data warehouses, data lakes, or similar) do you hope to become more familiar with in the next 2 years?',
       'Time from Start to finish (seconds)', 'ID',
       'Approximately how much money have you (or your team) spent on machine learning and_or cloud computing services at home (or at work) in the past 5 years (approximate $USD)?',
       'In the next 2 years, do you hope to become more familiar with any of these managed machine learning products?',
       'Select any activities that make up an important part of your role at work',
       'What data visualization libraries or tools do you use on a regular basis?',
       'Which of the following automated machine learning tools (or partial AutoML tools) do you use on a regular basis?',
       'What is your age (years)?',
       'What programming language would you recommend an aspiring data scientist to learn first?',
       'Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?',
       'What programming languages do you use on a regular basis?',
       'What type of computing platform do you use most often for your data science projects?'],
      dtype='object')
====================
====================
057_Spain
====================
Index(['Vote Intention', 'Age', 'const', 'edu', 'gender', 'lang', 'partyId',
       'polInterest', 'prevVote', 'prevVoteCat', 'prov',
       'Austerity politics are needed in order to overcome the crisis',
       'The growth of Islam is a threat to the security of Spain',
       'The church must pay the IBI',
       'The fact that gay couples can adopt children is positive for society',
       'Women should choose freely on issues of abortion',
       'The immigration detention centres (CIES) should be closed',
       'Schools segregated by sex should also be subsidized by the state',
       'Spain must tighten its immigration policy',
       'Bullfights in Spain should be banned',
       'The 'gag law' is necessary to avoid social unrest',
       'In order to fight organized crime, restrictions on civil rights and liberties must be accepted',
       'Efficiency in the delivery of public services will be improved with private sector participation',
       'Negotiations with ETA weaken the state',
       'The political party that receives the most votes should govern',
       'Decentralizati on in Spain is inadequate and should continue to expand',
       'Linguistic policy in the autonomous regions discriminates against Spanish language',
       'The central government should control the spending of regional governments to limit their indebtedness',
       'The possibility of a referendum on self- determination of any Autonomous Community must be recognized by the Constitution',
       'The 1978 Constitution is the appropriate framework for our society',
       'Navarra and the Basque Country should retain their tax system',
       'Catalonia must be recognized as a nation',
       'The government should take a tougher line against the persecution of opposition leaders in Venezuela',
       'The number of public sector workers should be increased',
       'The European Union must do more to support the Greek economy',
       'It should be more difficult for companies to lay off workers',
       'Bailing out banks is needed in order to restore economic stability',
       'Increasing university fees is necessary for the sustainability of the university system',
       'The government should subsidize clean energy in order to encourage its use',
       'The subject of religion should be part of the curriculum',
       'The decriminalizati on of soft drugs for personal use is a positive measure',
       'User self-placement on Left-Right economic values axis',
       'User self- placement on Progressive-Conservative economic values axis',
       'Constitutional organisation of the country (More Descentralization)',
       'voteReason'],
      dtype='object')
====================
====================
025_Data
====================
Index(['URLs', 'Ranking', 'Keyword', 'Avg. monthly searches', 'Competition'], dtype='object')
====================
====================
042_Predict
====================
Index(['school', 'sex', 'age', 'address', 'famsize', 'Pstatus', 'Medu', 'Fedu',
       'Mjob', 'Fjob', 'reason', 'guardian', 'traveltime', 'studytime',
       'failures', 'schoolsup', 'famsup', 'paid', 'activities', 'nursery',
       'higher', 'internet', 'romantic', 'famrel', 'freetime', 'goout', 'Dalc',
       'Walc', 'health', 'absences', 'G1', 'G2', 'G3'],
      dtype='object')
====================
====================
013_Roller
====================
Index(['coaster_name', 'Length', 'Speed', 'Location', 'Status', 'Opening date',
       'Type', 'Manufacturer', 'Height restriction', 'Model', 'Height',
       'Inversions', 'Lift/launch system', 'Cost', 'Trains', 'Park section',
       'Duration', 'Capacity', 'G-force', 'Designer', 'Max vertical angle',
       'Drop', 'Soft opening date', 'Fast Lane available', 'Replaced',
       'Track layout', 'Fastrack available', 'Soft opening date.1',
       'Closing date', 'Opened', 'Replaced by', 'Website',
       'Flash Pass Available', 'Must transfer from wheelchair', 'Theme',
       'Single rider line available', 'Restraint Style',
       'Flash Pass available', 'Acceleration', 'Restraints', 'Name',
       'year_introduced', 'latitude', 'longitude', 'Type_Main',
       'opening_date_clean', 'speed1', 'speed2', 'speed1_value', 'speed1_unit',
       'speed_mph', 'height_value', 'height_unit', 'height_ft',
       'Inversions_clean', 'Gforce_clean'],
      dtype='object')
====================
====================
064_Clustering
====================
Index(['animal_name', 'hair', 'feathers', 'eggs', 'milk', 'airborne',
       'aquatic', 'predator', 'toothed', 'backbone', 'breathes', 'venomous',
       'fins', 'legs', 'tail', 'domestic', 'catsize', 'class_type'],
      dtype='object')
====================
====================
019_Aircraft
====================
Index(['Incident_Date', 'Aircaft_Model', 'Aircaft_Registration',
       'Aircaft_Operator', 'Aircaft_Nature', 'Incident_Category',
       'Incident_Cause(es)', 'Incident_Location', 'Aircaft_Damage_Type',
       'Date', 'Time', 'Arit', 'Aircaft_Engines', 'Onboard_Crew',
       'Onboard_Passengers', 'Onboard_Total', 'Fatalities',
       'Aircaft_First_Flight', 'Aircraft_Phase', 'Departure_Airport',
       'Destination_Airport', 'Ground_Casualties', 'Collision_Casualties'],
      dtype='object')
====================
====================
021_Telco
====================
Index(['customerID', 'gender', 'SeniorCitizen', 'Partner', 'Dependents',
       'tenure', 'PhoneService', 'MultipleLines', 'InternetService',
       'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',
       'StreamingTV', 'StreamingMovies', 'Contract', 'PaperlessBilling',
       'PaymentMethod', 'MonthlyCharges', 'TotalCharges', 'Churn'],
      dtype='object')
====================
====================
024_Salary
====================
Index(['clusters_2', 'RETRINOIN_xRZI', 'CNO1', 'CNACE', 'ESTU', 'SEXO',
       'ANOS2', 'NUTS1', 'ESTRATO2', 'CONTROL', 'MERCADO', 'REGULACION',
       'TIPOPAIS', 'RESPONSA', 'ANOANTI', 'TIPOJOR', 'TIPOCON', 'RETRINOIN',
       'RETRINOIN_WwQk', 'Quantiles_target', '_gx_link_targets_',
       '_gx_link_weights_', 'umap_cluster', 'x', 'y', 'RETRINOIN_ac1q',
       'RETRINOIN_QSbS', 'RETRINOIN_stfU', 'RETRINOIN_RxV1'],
      dtype='object')
====================
====================
035_Billboard
====================
Index(['Rank', 'Song', 'Artist', 'Year', 'Lyrics', 'Source'], dtype='object')
====================
====================
001_Forbes
====================
Index(['rank', 'personName', 'age', 'finalWorth', 'category', 'source',
       'country', 'state', 'city', 'organization', 'selfMade', 'gender',
       'birthDate', 'title', 'philanthropyScore', 'bio', 'about'],
      dtype='object')
====================
====================
043_Predict
====================
Index(['LoanNr_ChkDgt', 'Name', 'Sector', 'City', 'State', 'Zip', 'Bank',
       'BankState', 'NAICS', 'ApprovalFY', 'NoEmp', 'NewExist', 'CreateJob',
       'RetainedJob', 'FranchiseCode', 'UrbanRural', 'DisbursementGross',
       'GrAppv', 'SBA_Appv', 'default_amount'],
      dtype='object')
====================
====================
048_Data
====================
Index(['Job Title', 'Salary Estimate', 'Job Description', 'Rating',
       'Company Name', 'Location', 'Headquarters', 'Size', 'Founded',
       'Type of ownership', 'Industry', 'Sector', 'Revenue', 'Competitors',
       'hourly', 'employer_provided', 'min_salary', 'max_salary', 'avg_salary',
       'company_txt', 'job_state', 'same_state', 'age', 'python_yn', 'R_yn',
       'spark', 'aws', 'excel'],
      dtype='object')
====================
